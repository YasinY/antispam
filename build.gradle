
plugins {
	id 'java'
	id 'jacoco'
}

repositories {
	maven {
		url = 'http://repo.runelite.net'
	}
	mavenCentral()
}

def runeLiteVersion = 'latest.release'

dependencies {
    compileOnly group: 'net.runelite', name:'client', version: runeLiteVersion
    compileOnly 'org.projectlombok:lombok:1.18.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.4'

    implementation "org.apache.commons:commons-csv:1.4"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.slf4j:slf4j-simple:1.7.12'
    testImplementation group: 'net.runelite', name:'client', version: runeLiteVersion, {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
}

group = 'com.antibeggar'
version = '1.0.0'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

// JaCoCo Configuration for Code Coverage
jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.enabled true
		xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
		html.enabled true
		html.destination file("${buildDir}/reports/jacoco/html")
		csv.enabled false
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
				'**/ui/**',
				'**/plugin/PluginRunner.class'
			])
		}))
	}
}

test {
	finalizedBy jacocoTestReport
}

task coverage {
	dependsOn test, jacocoTestReport
	description = 'Runs tests and generates coverage report'
	group = 'verification'
}
